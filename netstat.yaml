---
- use:
  - 'Regexp::Common::net'
  - 'Net::IPAddress::Util qw( :constr )'
- vars:
    regexp:
      - name: IP_PORT
        value: "((?:$RE{net}{IPv4}{dec}|$RE{net}{IPv6}{-style => 'HeX'}):(?:\d+|\*))"
      - name: PORT_STATE
        value: '(LISTEN|ESTABLISHED|CLOSE_WAIT|)'
      - name: SOCK_TYPE
        value: '(STREAM|DGRAM|SEQPACKET)'
      - name: SOCK_STATE
        value: '(CONNECTED|LISTENING|)'
- tables:
    - name: 'internet'
      start_regexp: '^Active Internet connections'
      skip_start_lines: 1
    - name: 'unix'
      start_regexp: '^Active UNIX domain sockets'
      skip_start_lines: 1
- parse: '*'
  within: 'internet'
  regexp: '^(\w+)\s+(\d+)\s+(\d+)\s+($IP_PORT)\s+($IP_PORT)\s+($PORT_STATE)$'
  into:
    - 'proto'
    - 'revc_q'
    - 'send_q'
    - 'local'
    - 'foreign'
    - 'state'
- parse: 'internet.local'
  regexp: '^(.+):(\d+|\*)$'
  into:
    - 'local_addr'
    - 'local_port'
- parse: 'internet.foreign'
  regexp: '^(.+):(\d+|\*)$'
  into:
    - 'foreign_addr'
    - 'foreign_port'
- transform: 'internet.local_addr'
  using:
    code: 'eval { IP($_[0])->as_n128 }'
- transform: 'internet.local_port'
  using:
    nullif: '*'
- transform: 'internet.foreign_addr'
  using:
    code: 'eval { IP($_[0])->as_n128 }'
- transform: 'internet.foreign_port'
  using:
    nullif: '*'
- transform: 'internet.state'
  using:
    nullif: ''
- parse: '*'
  within: 'unix'
  regexp: '^(\w+)\s+(\d+)\s+\[\s*([[:alnum:] ]+)\s*\]\s+($SOCK_TYPE)\s+($SOCK_STATE)\s+(\d+)\s+(.+)$'
  into:
    - 'os'
    - 'refcnt'
    - 'flags'
    - 'type'
    - 'state'
    - 'inode'
    - 'path'
- transform: 'unix.state'
  using:
    nullif: ''
